import backgammon_env
import tesauro


def test_tesauro():
    bck = backgammon_env.Backgammon()
    observer = tesauro.Tesauro198()
    state = bck.s0(player_1=True)
    o = observer.observe(state)
    assert o == [
        0,  # 1
        0,
        0,
        0,
        1,
        1,
        0,
        0,
        0,  # 2
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,  # 3
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,  # 4
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,  # 5
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,  # 6
        1,
        1,
        1,
        0,
        0,
        0,
        0,
        0,  # 7
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,  # 8
        1,
        1,
        0,
        0,
        0,
        0,
        0,
        0,  # 9
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,  # 10
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,  # 11
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,  # 12
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,  # 13
        1,
        1,
        1,
        0,
        0,
        0,
        0,
        0,  # 14
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,  # 15
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,  # 16
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,  # 17
        0,
        0,
        0,
        1,
        1,
        1,
        0,
        0,  # 18
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,  # 19
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        0,  # 20
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,  # 21
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,  # 22
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,  # 23
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,  # 24
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
    ]
